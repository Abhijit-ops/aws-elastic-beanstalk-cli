# -*-perl-*-
 
 package.EB-CLI = {
     interfaces = (1.0);
 
     build-system = brazilpython;
 
     build-tools = {
         1.0 = {
             BrazilPython = 2.0;
             Python-setuptools = 28.0.x;
             Sphinx = 1.3.x;
             Flake8 = 2.1;
 
             # Python versions to build for
             Python27 = 1.0;
         };
     };
 
     build-environment = {
         chroot = basic;
         network-access = blocked;
     };
 
     # Comment the following if this is not a pure Python package
     deploy = {
         generic = true;
     };
 
     dependencies = {
         1.0 = {
            Python-cement = 2.4.x;
            BotoCore = 1.4.9;
            Colorama = 0.3.2;
            Docker-py = 1.8.x;
            Docopt = 0.6.x;
            Python-dateutil = 2.5.x;
            Python-dockerpty = 0.3.x;
            Requests = 2.x.x;
            Python-tabulate = 0.7.x;
            Python-websocket-client = 0.34.x;
            PyYAML3 = 3.09;
            Python-semantic_version = 2.6.x;
            Python-setuptools = 28.0.x;
            Python-blessed = 1.14.x;
            Python-wcwidth = 0.1.x;
            Python-pathspec = 0.5.x;
            OdinLocalPythonInterface = 1.1;
         };
     };
 
     runtime-dependencies = {
         1.0 = {
             # If you're building a library, you don't need a runtime
             # dependency on Python. If you're writing a top-level
             # package, uncomment the following lines to add a
             # dependency.  Read more at https://w.amazon.com/?Python/Apollo#Deploying_Python
             #Python27 = 1.0;
             #MakePython27Default = 1.0;
             Python-setuptools = 28.0.x;
         };
     };

         resolves-conflict-dependencies = {
        1.0 = {
            Python-dateutil = 2.5.x;
            Python-setuptools = 28.0.x;
        };
    };
 
     test-dependencies = {
         1.0 = {
             PythonTestingDependencies = 1.0;
         };
     };
 
     python = {
         default-version = "2.7";
         setup-type = setuptools;
         unittesttype = pytest;
         # this test line must be modified by adding --cov
         # YOUR_PYTHON_MODULE and uncommented in order to enable
         # coverage.  You really, really should create tests.
         #
         # You must specify the python module or package root you wish to
         # cover using the --cov command line flag. As an example, "--cov
         # bender.core" would collect coverage for every module and
         # package in the bender.core namespace.
         #doctool = sphinx;
         testargs = "-v --cov ebcli --cov-report xml --cov-report term-missing  tests/";
     };
 
     targets = {
         # see setup.py for the actual build logic
         # keep this line for brazil-path to work
         python = { type = python; };
     };
 };
